run:
  name: ${.task_name}_${.model_train_name}
  time_limit: "04:00:00"
  dependency: "singleton"
  convert_name: convert_nemo
  model_train_name: mt5_390m
  task_name: "custom_task"  # Rename this name to be more clear
  results_dir: ${base_results_dir}/${.model_train_name}/${.task_name}

trainer:
  devices: 8
  num_nodes: 1
  accelerator: gpu
  precision: bf16
  logger: False # logger provided by exp_manager
  enable_checkpointing: False
  replace_sampler_ddp: False
  max_epochs: 5
  max_steps: null # consumed_samples = global_step * micro_batch_size * data_parallel_size * accumulate_grad_batches
  log_every_n_steps: 10
  val_check_interval: 300
  accumulate_grad_batches: 1
  gradient_clip_val: 1.0

exp_manager:
  explicit_log_dir: ${finetuning.run.results_dir}
  exp_dir: null
  name: megatron_mt5_${finetuning.run.task_name}
  create_wandb_logger: False
  wandb_logger_kwargs:
    project: nemo_mt5_${finetuning.run.task_name}
    name: ${finetuning.run.name}
  resume_if_exists: True
  resume_ignore_no_checkpoint: True
  create_checkpoint_callback: True
  checkpoint_callback_params:
    monitor: validation_${finetuning.model.data.validation_ds.metric.name}
    save_top_k: 5
    mode: max
    always_save_nemo: False
    save_nemo_on_train_end: True # Set to true for subsequent validation runs.
    filename: 'megatron_mt5--{${finetuning.exp_manager.checkpoint_callback_params.monitor}:.3f}-{step}'
    model_parallel_size: ${finetuning.model.model_parallel_size}
    save_best_model: True

model: # For different finetuning tasks, tuning the hyper parameters accordingly
  restore_from_path: ${base_results_dir}/${finetuning.run.model_train_name}/${finetuning.run.convert_name}/megatron_mt5.nemo # Path to a trained mt5 .nemo file
  tensor_model_parallel_size: 1
  pipeline_model_parallel_size: 1
  pipeline_model_parallel_split_rank: ${divide_floor:${.pipeline_model_parallel_size}, 2}
  model_parallel_size: ${multiply:${.tensor_model_parallel_size}, ${.pipeline_model_parallel_size}}
  gradient_as_bucket_view: True # Allocate gradients in a contiguous bucket to save memory (less fragmentation and buffer memory)
  megatron_amp_O2: False # Enable O2 optimization for megatron amp
  resume_from_checkpoint: null
  hidden_dropout: 0.1 # Override dropout prob from pretraining
  attention_dropout: 0.1 # Override attention dropout prob from pretraining

  data:
    train_ds:
      src_file_name: ??? # Path to the txt file corresponding to the source data.
      tgt_file_name: ??? # Path to the txt file corresponding to the target data.
      global_batch_size: 128
      micro_batch_size: 16
      shuffle: True
      num_workers: 0  # Known issue: > 0 may not work
      pin_memory: True
      max_src_seq_length: 512
      max_tgt_seq_length: 128
      drop_last: True
      concat_sampling_technique: temperature # When providing a list of datasets, this arg defines the sampling strategy. Options: ['temperature', 'random']
      concat_sampling_temperature: 5 # When providing a list of datasets, this arg defines the sampling temperature when strategy='temperature'
      concat_sampling_probabilities: null # When providing a list of datasets, this arg defines the sampling probabilities from each dataset when strategy='random'

    validation_ds:
      src_file_name: ??? # Path to the txt file corresponding to the source data.
      tgt_file_name: ??? # Path to the txt file corresponding to the target data.
      names: null # If src/tgt file names are ListConfigs, the corresponding label is used to log metrics.
      global_batch_size: 128
      micro_batch_size: 16
      shuffle: False
      num_workers: 4
      pin_memory: True
      max_src_seq_length: 512
      max_tgt_seq_length: 128
      drop_last: False
      write_predictions_to_file: False
      output_file_path_prefix: null # Prefix of the file to write predictions to.
      metric:
        name: "exact_string_match" # Name of the evaluation metric to use.
        average: null # Average the metric over the dataset. Options: ['macro', 'micro']. Works only for 'F1', 'accuracy' etc. Refer to torchmetrics for metrics where this is supported.
        num_classes: null

  optim:
    name: fused_adam
    lr: 2.0e-5
    weight_decay: 0.1