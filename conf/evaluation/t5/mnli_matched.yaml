run:
  name: eval_${.task_name}_${.model_train_name}
  time_limit: "04:00:00"
  dependency: "singleton"
  model_train_name: t5_220m
  task_name: "mnli" # Supported task names: "cola", "sst-2", "mrpc", "sts-b", "qqp", "mnli", "qnli", "rte"
  fine_tuning_dir: ${base_results_dir}/${.model_train_name}/${.task_name}
  results_dir: ${base_results_dir}/${.model_train_name}/${.task_name}_eval

trainer:
  devices: 8
  num_nodes: 1
  accelerator: gpu
  precision: bf16
  logger: False # logger provided by exp_manager
  enable_checkpointing: False
  replace_sampler_ddp: False
  log_every_n_steps: 10


exp_manager:
  explicit_log_dir: ${evaluation.run.results_dir}/results
  exp_dir: null
  name: megatron_t5_glue_eval
  create_checkpoint_callback: False

model:
  restore_from_path: ${evaluation.run.fine_tuning_dir}/results/checkpoints/megatron_t5_glue.nemo # Path to a finetuned T5 .nemo file
  gradient_as_bucket_view: True # Allocate gradients in a contiguous bucket to save memory (less fragmentation and buffer memory)
  megatron_amp_O2: False # Enable O2 optimization for megatron amp

  data:
    validation_ds:
      task_name: ${evaluation.run.task_name}
      file_path: ${data_dir}/glue_data/${evaluation.run.task_name}/dev_matched.tsv # Path to the TSV file for MNLI dev. Replace `dev_matched.tsv` with `dev.tsv` if '/raid/Data/GLUE/MNLI/dev_matched.tsv'
      global_batch_size: 32
      micro_batch_size: 4
      shuffle: False
      num_workers: 4
      pin_memory: True
      max_seq_length: 512
      drop_last: False
      write_predictions_to_file: False
      output_file_path_prefix: null # Prefix of the file to write predictions to.
      metric:
        name: "exact_string_match" # Name of the evaluation metric to use.
        average: null # Average the metric over the dataset. Options: ['macro', 'micro']. Works only for 'F1', 'accuracy' etc. Refer to torchmetrics for metrics where this is supported.
        num_classes: null