run:
  name: ${.task_name}_${.model_train_name}
  time_limit: "04:00:00"
  dependency: "singleton"
  convert_name: convert_nemo
  model_train_name: mt5_390m
  convert_dir: ${base_results_dir}/${fine_tuning.run.model_train_name}/${fine_tuning.run.convert_name}
  task_name: "xnli"
  results_dir: ${base_results_dir}/${.model_train_name}/${.task_name}

trainer:
  devices: 8
  num_nodes: 1
  accelerator: gpu
  precision: bf16
  logger: False # logger provided by exp_manager
  enable_checkpointing: False
  replace_sampler_ddp: False
  max_epochs: 5
  max_steps: -1 # consumed_samples = global_step * micro_batch_size * data_parallel_size * accumulate_grad_batches
  log_every_n_steps: 10
  val_check_interval: 300
  accumulate_grad_batches: 1
  gradient_clip_val: 1.0

exp_manager:
  explicit_log_dir: ${fine_tuning.run.results_dir}/results
  exp_dir: null
  name: megatron_mt5_glue_xnli
  create_wandb_logger: False
  wandb_logger_kwargs:
    project: megatron_mt5_glue_xnli
    name: ${fine_tuning.run.name}
  resume_if_exists: True
  resume_ignore_no_checkpoint: True
  create_checkpoint_callback: True
  checkpoint_callback_params:
    monitor: validation_${fine_tuning.model.data.validation_ds.metric.name}
    save_top_k: 5
    mode: max
    always_save_nemo: False
    save_nemo_on_train_end: True # Set to true for subsequent validation runs.
    filename: 'megatron_mt5--{${.monitor}:.3f}-{step}'
    model_parallel_size: ${fine_tuning.model.model_parallel_size}
    save_best_model: True

model: # For different fine_tuning tasks, tuning the hyper parameters accordingly
  restore_from_path: ${fine_tuning.run.convert_dir}/results/megatron_mt5.nemo # Path to a trained mt5 .nemo file
  pretrained_checkpoint:
    checkpoint_dir: null # Path to a folder that contains a .ckpt file
    checkpoint_name: null # Name of the .ckpt file within the checkpoint_dir.
    hparams_file: null # Path to a .yaml file that contains the hyperparameters of the checkpoint.
  tensor_model_parallel_size: 1
  pipeline_model_parallel_size: 1
  pipeline_model_parallel_split_rank: ${divide_floor:${.pipeline_model_parallel_size}, 2}
  model_parallel_size: ${multiply:${.tensor_model_parallel_size}, ${.pipeline_model_parallel_size}}
  gradient_as_bucket_view: True # Allocate gradients in a contiguous bucket to save memory (less fragmentation and buffer memory)
  megatron_amp_O2: False # Enable O2 optimization for megatron amp
  eval_languages: ['fr', 'de', 'en', 'es'] # List of languages to evaluate zero-shot XNLI performance. Full language list: ar,bg,de,el,en,es,fr,hi,ru,sw,th,tr,ur,vi,zh
  resume_from_checkpoint: null
  hidden_dropout: 0.1 # Override dropout prob from pretraining
  attention_dropout: 0.1 # Override attention dropout prob from pretraining

  data:
    train_ds: # XNLI task use mnli training data
      task_name: 'mnli'
      file_path: ${data_dir}/glue_data/mnli/train.tsv # Path to the TSV file for MNLI train
      global_batch_size: 128
      micro_batch_size: 16
      shuffle: True
      num_workers: 0  # Known issue: > 0 may not work
      pin_memory: True
      max_seq_length: 512
      drop_last: True

    validation_ds:
      task_name: 'xnli'
      file_path: ${data_dir}/glue_data/xnli/xnli.dev.tsv # Path to the TSV file for XNLI dev
      global_batch_size: 128
      micro_batch_size: 16
      shuffle: False
      num_workers: 4
      pin_memory: True
      max_seq_length: 512
      drop_last: False
      write_predictions_to_file: False
      prediction_file_path_prefix: null # Prefix of the file to write predictions to.
      metric:
        name: "exact_string_match" # Name of the evaluation metric to use.
        average: null # Average the metric over the dataset. Options: ['macro', 'micro']. Works only for 'F1', 'accuracy' etc. Refer to torchmetrics for metrics where this is supported.
        num_classes: null
        class_labels: null
        labels_are_strings: False

    test_ds:
      task_name: 'xnli'
      file_path: ${data_dir}/glue_data/xnli/xnli.test.tsv # Path to the TSV file for XNLI test
      global_batch_size: 128
      micro_batch_size: 16
      shuffle: False
      num_workers: 4
      pin_memory: True
      max_seq_length: 512
      drop_last: False
      write_predictions_to_file: False
      output_file_path_prefix: null # Prefix of the file to write predictions to.
      metric:
        name: "exact_string_match" # Name of the evaluation metric to use.
        average: null # Average the metric over the dataset. Options: ['macro', 'micro']. Works only for 'F1', 'accuracy' etc. Refer to torchmetrics for metrics where this is supported.
        num_classes: null
        class_labels: null
        labels_are_strings: False

  optim:
    name: fused_adam
    lr: 2.0e-5
    weight_decay: 0.1