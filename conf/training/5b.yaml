bcp:
  job_name: bignlp-${training.run.name}
  nodes: 20
  ntasks_per_node: 8
  gpus_per_task: 1
  time_limit: "8D"
  instance: "dgxa100.80g.8.norm"
  workspace_common: "bignlp_ws_common"
  workspace_scripts: "bignlp_ws_scripts_mk"

run:
  name: "5b-20f8"
  results_dir: /workspace-scripts/results/${.name}
  log_dir: ${.results_dir}

trainer:
  num_nodes: ${training.bcp.nodes}
  gpus: ${training.bcp.ntasks_per_node}
  accelerator: ddp
  precision: 16
  amp_backend: native
  logger: False # logger provided by exp_manager
  checkpoint_callback: False
  replace_sampler_ddp: False
  max_epochs: null
  max_steps: 120000 # consumed_samples = global_step * micro_batch_size * data_parallel_size * accumulate_grad_batches
  max_time: 08:00:00:00
  log_every_n_steps: 100
  val_check_interval: ${multiply:2000, ${.accumulate_grad_batches}}
  limit_val_batches: ${multiply:50, ${.accumulate_grad_batches}}
  limit_test_batches: ${multiply:50, ${.accumulate_grad_batches}}
  accumulate_grad_batches: 8 # AGB=8 for 80GB, 32 for 40 GB nodes
  gradient_clip_val: 1.0

exp_manager:
  explicit_log_dir: ${training.run.log_dir}
  exp_dir: null
  name: megatron_gpt
  create_wandb_logger: False
  wandb_logger_kwargs:
    project: nemo_gpt_pretraining
    name: dev
  resume_if_exists: True
  resume_ignore_no_checkpoint: True
  create_checkpoint_callback: True
  checkpoint_callback_params:
    monitor: val_loss
    save_top_k: 10
    mode: min
    always_save_nemo: False # saves nemo file during validation, not implemented for model parallel
    filename: 'megatron_gpt--{val_loss:.2f}-{step}-{consumed_samples}'
    model_parallel_size: ${training.model.tensor_model_parallel_size}
  log_step_timing: True
  step_timing_kwargs:
    sync_cuda: True
    buffer_size: ${multiply:100, ${training.trainer.accumulate_grad_batches}}

model:
  # model parallelism: MBS=2, TPS=2, AGB=8 for 80GB nodes. [1,4,32] for 40GB nodes 
  micro_batch_size: 2
  tensor_model_parallel_size: 2

  # model architecture
  encoder_seq_length: 2048
  max_position_embeddings: 2048
  num_layers: 24
  hidden_size: 4096
  ffn_hidden_size: ${multiply:4, ${.hidden_size}}  # Transformer FFN hidden size. 4 * hidden_size.
  num_attention_heads: 32
  init_method_std: 0.01  # Standard deviation of the zero mean normal distribution used for weight initialization.')
  hidden_dropout: 0.1  # Dropout probability for hidden state transformer.
  kv_channels: null  # Projection weights dimension in multi-head attention. Set to hidden_size // num_attention_heads if null
  apply_query_key_layer_scaling: True # scale Q * K^T by 1 / layer-number.
  layernorm_epsilon: 1e-5
  make_vocab_size_divisible_by: 128 # Pad the vocab size to be divisible by this value for computation efficiency.
  pre_process: True # add embedding
  post_process: True # add pooler
  activations_checkpoint_method: block
  activations_checkpoint_num_layers: 4

  tokenizer:
    library: 'megatron'
    type: 'GPT2BPETokenizer'
    model: null
    vocab_file: ${bignlp_path}/data_preparation/bpe/vocab.json
    merge_file: ${bignlp_path}/data_preparation/bpe/merges.txt

  # precision
  native_amp_init_scale: 4294967296 # 2 ** 32
  native_amp_growth_interval: 1000
  fused_fp16: True # False if using fp32 or bf16
  fused_bf16: False # True if using bf16
  fp32_residual_connection: False # Move residual connections to fp32
  fp16_lm_cross_entropy: False # Move the cross entropy unreduced loss calculation for lm head to fp16

  # miscellaneous
  seed: 1234
  use_cpu_initialization: False # Init weights on the CPU (slow for large models)
  onnx_safe: False # Use work-arounds for known problems with Torch ONNX exporter.

  optim:
    name: fused_adam
    lr: 1.2e-4
    weight_decay: 0.1 
    betas: 
    - 0.9
    - 0.95
    sched:
      name: CosineAnnealing
      warmup_steps: 190
      constant_steps: 20000
      min_lr: 1.2e-5

  data:
    data_impl: mmap
    splits_string: "99990,8,2"
    seq_length: 2048
    skip_warmup: True
    num_workers: 2
    dataloader_type: single # cyclic
    reset_position_ids: False # Reset position ids after end-of-document token
    reset_attention_mask: False # Reset attention mask after end-of-document token
    eod_mask_loss: False # Mask loss for the end of document tokens
    data_prefix: # Should be weight path weight path... for a blended dataset
      - .0333
      - ${data_dir}/my-gpt3_00_text_document
      - .0333
      - ${data_dir}/my-gpt3_01_text_document
      - .0333
      - ${data_dir}/my-gpt3_02_text_document
      - .0333
      - ${data_dir}/my-gpt3_03_text_document
      - .0333
      - ${data_dir}/my-gpt3_04_text_document
      - .0333
      - ${data_dir}/my-gpt3_05_text_document
      - .0333
      - ${data_dir}/my-gpt3_06_text_document
      - .0333
      - ${data_dir}/my-gpt3_07_text_document
      - .0333
      - ${data_dir}/my-gpt3_08_text_document
      - .0333
      - ${data_dir}/my-gpt3_09_text_document
      - .0333
      - ${data_dir}/my-gpt3_10_text_document
      - .0333
      - ${data_dir}/my-gpt3_11_text_document
      - .0333
      - ${data_dir}/my-gpt3_12_text_document
      - .0333
      - ${data_dir}/my-gpt3_13_text_document
      - .0333
      - ${data_dir}/my-gpt3_14_text_document
      - .0333
      - ${data_dir}/my-gpt3_15_text_document
      - .0333
      - ${data_dir}/my-gpt3_16_text_document
      - .0333
      - ${data_dir}/my-gpt3_17_text_document
      - .0333
      - ${data_dir}/my-gpt3_18_text_document
      - .0333
      - ${data_dir}/my-gpt3_19_text_document
      - .0333
      - ${data_dir}/my-gpt3_20_text_document
      - .0333
      - ${data_dir}/my-gpt3_21_text_document
      - .0333
      - ${data_dir}/my-gpt3_22_text_document
      - .0333
      - ${data_dir}/my-gpt3_23_text_document
      - .0333
      - ${data_dir}/my-gpt3_24_text_document
      - .0333
      - ${data_dir}/my-gpt3_25_text_document
      - .0333
      - ${data_dir}/my-gpt3_26_text_document
      - .0333
      - ${data_dir}/my-gpt3_27_text_document
      - .0333
      - ${data_dir}/my-gpt3_28_text_document
      - .0334
      - ${data_dir}/my-gpt3_29_text_document
